name: ci

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'
  pull_request:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install dependencies
      run: npm install

    - name: Test
      run: npm test

    - name: Build
      env:
        REACT_APP_BASE_URL: ${{ vars.BASE_URL }}
        REACT_APP_BLOCK_URL_PATH: ${{ vars.BLOCK_URL_PATH }}
        REACT_APP_CONFIG_URL_PATH: ${{ vars.CONFIG_URL_PATH }}
        REACT_APP_AUTH0_AUDIENCE: ${{ vars.AUTH0_AUDIENCE }}
        REACT_APP_AUTH0_DOMAIN: ${{ vars.AUTH0_DOMAIN }}
        REACT_APP_AUTH0_CLIENT_ID: ${{ vars.AUTH0_CLIENT_ID }}
        REACT_APP_VERSION: ${{ github.ref_name }}
      run: |
        env | grep "^REACT_APP_" >> .env
        npm run build --if-present

    - name: Create release archive
      run: tar -C ./build -czf ./release.tar.gz .

    - name: Create a GitHub release
      uses: ncipollo/release-action@v1
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      with:
        tag: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        artifacts: release.tar.gz

  demo-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    #if: ${{ startsWith(github.ref, 'refs/tags/') }}

    steps:
    - uses: actions/checkout@v3

    - name: Setup Pages
      uses: actions/configure-pages@v3

    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install dependencies
      run: npm install

    - name: Build demo
      run: |
        cp .demo-env .env
        npm run build --if-present

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: './build'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v1